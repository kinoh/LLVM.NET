#pragma once
#using <mscorlib.dll>
#include "llvm/Assembly/PrintModulePass.h"
#include "llvm/InitializePasses.h"

namespace LLVM
{

ref class raw_ostream;
ref class ModulePass;
ref class FunctionPass;
ref class BasicBlockPass;
ref class PassRegistry;

public ref class Passes
{
public:
	static ModulePass ^createPrintModulePass(raw_ostream ^OS);
	static ModulePass ^createPrintModulePass(raw_ostream ^OS, bool DeleteStream);
	static ModulePass ^createPrintModulePass(raw_ostream ^OS, bool DeleteStream, System::String ^Banner);
	static FunctionPass ^createPrintFunctionPass(System::String ^Banner, raw_ostream ^OS);
	static FunctionPass ^createPrintFunctionPass(System::String ^Banner, raw_ostream ^OS, bool DeleteStream);
	static BasicBlockPass ^createPrintBasicBlockPass(raw_ostream ^OS);
	static BasicBlockPass ^createPrintBasicBlockPass(raw_ostream ^OS, bool DeleteStream);
	static BasicBlockPass ^createPrintBasicBlockPass(raw_ostream ^OS, bool DeleteStream, System::String ^Banner);

	static void initializeCore(PassRegistry ^registry);
	static void initializeTransformUtils(PassRegistry ^registry);
	static void initializeScalarOpts(PassRegistry ^registry);
	static void initializeObjCARCOpts(PassRegistry ^registry);
	static void initializeVectorization(PassRegistry ^registry);
	static void initializeInstCombine(PassRegistry ^registry);
	static void initializeIPO(PassRegistry ^registry);
	static void initializeInstrumentation(PassRegistry ^registry);
	static void initializeAnalysis(PassRegistry ^registry);
	static void initializeIPA(PassRegistry ^registry);
	static void initializeCodeGen(PassRegistry ^registry);
	static void initializeTarget(PassRegistry ^registry);
	static void initializeAAEvalPass(PassRegistry ^registry);
	static void initializeADCEPass(PassRegistry ^registry);
	static void initializeAliasAnalysisAnalysisGroup(PassRegistry ^registry);
	static void initializeAliasAnalysisCounterPass(PassRegistry ^registry);
	static void initializeAliasDebuggerPass(PassRegistry ^registry);
	static void initializeAliasSetPrinterPass(PassRegistry ^registry);
	static void initializeAlwaysInlinerPass(PassRegistry ^registry);
	static void initializeArgPromotionPass(PassRegistry ^registry);
	static void initializeBarrierNoopPass(PassRegistry ^registry);
	static void initializeBasicAliasAnalysisPass(PassRegistry ^registry);
	static void initializeBasicCallGraphPass(PassRegistry ^registry);
	static void initializeBasicTTIPass(PassRegistry ^registry);
	static void initializeBlockExtractorPassPass(PassRegistry ^registry);
	static void initializeBlockFrequencyInfoPass(PassRegistry ^registry);
	static void initializeBlockPlacementPass(PassRegistry ^registry);
	static void initializeBoundsCheckingPass(PassRegistry ^registry);
	static void initializeBranchFolderPassPass(PassRegistry ^registry);
	static void initializeBranchProbabilityInfoPass(PassRegistry ^registry);
	static void initializeBreakCriticalEdgesPass(PassRegistry ^registry);
	static void initializeCallGraphPrinterPass(PassRegistry ^registry);
	static void initializeCallGraphViewerPass(PassRegistry ^registry);
	static void initializeCFGOnlyPrinterPass(PassRegistry ^registry);
	static void initializeCFGOnlyViewerPass(PassRegistry ^registry);
	static void initializeCFGPrinterPass(PassRegistry ^registry);
	static void initializeCFGSimplifyPassPass(PassRegistry ^registry);
	static void initializeCFGViewerPass(PassRegistry ^registry);
	static void initializeCalculateSpillWeightsPass(PassRegistry ^registry);
	static void initializeCallGraphAnalysisGroup(PassRegistry ^registry);
	static void initializeCodeGenPreparePass(PassRegistry ^registry);
	static void initializeConstantMergePass(PassRegistry ^registry);
	static void initializeConstantPropagationPass(PassRegistry ^registry);
	static void initializeMachineCopyPropagationPass(PassRegistry ^registry);
	static void initializeCostModelAnalysisPass(PassRegistry ^registry);
	static void initializeCorrelatedValuePropagationPass(PassRegistry ^registry);
	static void initializeDAEPass(PassRegistry ^registry);
	static void initializeDAHPass(PassRegistry ^registry);
	static void initializeDCEPass(PassRegistry ^registry);
	static void initializeDSEPass(PassRegistry ^registry);
	static void initializeDeadInstEliminationPass(PassRegistry ^registry);
	static void initializeDeadMachineInstructionElimPass(PassRegistry ^registry);
	static void initializeDependenceAnalysisPass(PassRegistry ^registry);
	static void initializeDomOnlyPrinterPass(PassRegistry ^registry);
	static void initializeDomOnlyViewerPass(PassRegistry ^registry);
	static void initializeDomPrinterPass(PassRegistry ^registry);
	static void initializeDomViewerPass(PassRegistry ^registry);
	static void initializeDominanceFrontierPass(PassRegistry ^registry);
	static void initializeDominatorTreePass(PassRegistry ^registry);
	static void initializeEarlyIfConverterPass(PassRegistry ^registry);
	static void initializeEdgeBundlesPass(PassRegistry ^registry);
	static void initializeEdgeProfilerPass(PassRegistry ^registry);
	static void initializeExpandPostRAPass(PassRegistry ^registry);
	static void initializePathProfilerPass(PassRegistry ^registry);
	static void initializeGCOVProfilerPass(PassRegistry ^registry);
	static void initializeAddressSanitizerPass(PassRegistry ^registry);
	static void initializeAddressSanitizerModulePass(PassRegistry ^registry);
	static void initializeMemorySanitizerPass(PassRegistry ^registry);
	static void initializeThreadSanitizerPass(PassRegistry ^registry);
	static void initializeEarlyCSEPass(PassRegistry ^registry);
	static void initializeExpandISelPseudosPass(PassRegistry ^registry);
	static void initializeFindUsedTypesPass(PassRegistry ^registry);
	static void initializeFunctionAttrsPass(PassRegistry ^registry);
	static void initializeGCMachineCodeAnalysisPass(PassRegistry ^registry);
	static void initializeGCModuleInfoPass(PassRegistry ^registry);
	static void initializeGVNPass(PassRegistry ^registry);
	static void initializeGlobalDCEPass(PassRegistry ^registry);
	static void initializeGlobalOptPass(PassRegistry ^registry);
	static void initializeGlobalsModRefPass(PassRegistry ^registry);
	static void initializeIPCPPass(PassRegistry ^registry);
	static void initializeIPSCCPPass(PassRegistry ^registry);
	static void initializeIVUsersPass(PassRegistry ^registry);
	static void initializeIfConverterPass(PassRegistry ^registry);
	static void initializeIndVarSimplifyPass(PassRegistry ^registry);
	static void initializeInlineCostAnalysisPass(PassRegistry ^registry);
	static void initializeInstCombinerPass(PassRegistry ^registry);
	static void initializeInstCountPass(PassRegistry ^registry);
	static void initializeInstNamerPass(PassRegistry ^registry);
	static void initializeInternalizePassPass(PassRegistry ^registry);
	static void initializeIntervalPartitionPass(PassRegistry ^registry);
	static void initializeJumpThreadingPass(PassRegistry ^registry);
	static void initializeLCSSAPass(PassRegistry ^registry);
	static void initializeLICMPass(PassRegistry ^registry);
	static void initializeLazyValueInfoPass(PassRegistry ^registry);
	static void initializeLibCallAliasAnalysisPass(PassRegistry ^registry);
	static void initializeLintPass(PassRegistry ^registry);
	static void initializeLiveDebugVariablesPass(PassRegistry ^registry);
	static void initializeLiveIntervalsPass(PassRegistry ^registry);
	static void initializeLiveRegMatrixPass(PassRegistry ^registry);
	static void initializeLiveStacksPass(PassRegistry ^registry);
	static void initializeLiveVariablesPass(PassRegistry ^registry);
	static void initializeLoaderPassPass(PassRegistry ^registry);
	static void initializeProfileMetadataLoaderPassPass(PassRegistry ^registry);
	static void initializePathProfileLoaderPassPass(PassRegistry ^registry);
	static void initializeLocalStackSlotPassPass(PassRegistry ^registry);
	static void initializeLoopDeletionPass(PassRegistry ^registry);
	static void initializeLoopExtractorPass(PassRegistry ^registry);
	static void initializeLoopInfoPass(PassRegistry ^registry);
	static void initializeLoopInstSimplifyPass(PassRegistry ^registry);
	static void initializeLoopRotatePass(PassRegistry ^registry);
	static void initializeLoopSimplifyPass(PassRegistry ^registry);
	static void initializeLoopStrengthReducePass(PassRegistry ^registry);
	static void initializeGlobalMergePass(PassRegistry ^registry);
	static void initializeLoopUnrollPass(PassRegistry ^registry);
	static void initializeLoopUnswitchPass(PassRegistry ^registry);
	static void initializeLoopIdiomRecognizePass(PassRegistry ^registry);
	static void initializeLowerAtomicPass(PassRegistry ^registry);
	static void initializeLowerExpectIntrinsicPass(PassRegistry ^registry);
	static void initializeLowerIntrinsicsPass(PassRegistry ^registry);
	static void initializeLowerInvokePass(PassRegistry ^registry);
	static void initializeLowerSwitchPass(PassRegistry ^registry);
	static void initializeMachineBlockFrequencyInfoPass(PassRegistry ^registry);
	static void initializeMachineBlockPlacementPass(PassRegistry ^registry);
	static void initializeMachineBlockPlacementStatsPass(PassRegistry ^registry);
	static void initializeMachineBranchProbabilityInfoPass(PassRegistry ^registry);
	static void initializeMachineCSEPass(PassRegistry ^registry);
	static void initializeMachineDominatorTreePass(PassRegistry ^registry);
	static void initializeMachinePostDominatorTreePass(PassRegistry ^registry);
	static void initializeMachineLICMPass(PassRegistry ^registry);
	static void initializeMachineLoopInfoPass(PassRegistry ^registry);
	static void initializeMachineModuleInfoPass(PassRegistry ^registry);
	static void initializeMachineSchedulerPass(PassRegistry ^registry);
	static void initializeMachineSinkingPass(PassRegistry ^registry);
	static void initializeMachineTraceMetricsPass(PassRegistry ^registry);
	static void initializeMachineVerifierPassPass(PassRegistry ^registry);
	static void initializeMemCpyOptPass(PassRegistry ^registry);
	static void initializeMemDepPrinterPass(PassRegistry ^registry);
	static void initializeMemoryDependenceAnalysisPass(PassRegistry ^registry);
	static void initializeMetaRenamerPass(PassRegistry ^registry);
	static void initializeMergeFunctionsPass(PassRegistry ^registry);
	static void initializeModuleDebugInfoPrinterPass(PassRegistry ^registry);
	static void initializeNoAAPass(PassRegistry ^registry);
	static void initializeNoProfileInfoPass(PassRegistry ^registry);
	static void initializeNoPathProfileInfoPass(PassRegistry ^registry);
	static void initializeObjCARCAliasAnalysisPass(PassRegistry ^registry);
	static void initializeObjCARCAPElimPass(PassRegistry ^registry);
	static void initializeObjCARCExpandPass(PassRegistry ^registry);
	static void initializeObjCARCContractPass(PassRegistry ^registry);
	static void initializeObjCARCOptPass(PassRegistry ^registry);
	static void initializeOptimalEdgeProfilerPass(PassRegistry ^registry);
	static void initializeOptimizePHIsPass(PassRegistry ^registry);
	static void initializePEIPass(PassRegistry ^registry);
	static void initializePHIEliminationPass(PassRegistry ^registry);
	static void initializePartialInlinerPass(PassRegistry ^registry);
	static void initializePeepholeOptimizerPass(PassRegistry ^registry);
	static void initializePostDomOnlyPrinterPass(PassRegistry ^registry);
	static void initializePostDomOnlyViewerPass(PassRegistry ^registry);
	static void initializePostDomPrinterPass(PassRegistry ^registry);
	static void initializePostDomViewerPass(PassRegistry ^registry);
	static void initializePostDominatorTreePass(PassRegistry ^registry);
	static void initializePostRASchedulerPass(PassRegistry ^registry);
	static void initializePreVerifierPass(PassRegistry ^registry);
	static void initializePrintFunctionPassPass(PassRegistry ^registry);
	static void initializePrintModulePassPass(PassRegistry ^registry);
	static void initializePrintBasicBlockPassPass(PassRegistry ^registry);
	static void initializeProcessImplicitDefsPass(PassRegistry ^registry);
	static void initializeProfileEstimatorPassPass(PassRegistry ^registry);
	static void initializeProfileInfoAnalysisGroup(PassRegistry ^registry);
	static void initializePathProfileInfoAnalysisGroup(PassRegistry ^registry);
	static void initializePathProfileVerifierPass(PassRegistry ^registry);
	static void initializeProfileVerifierPassPass(PassRegistry ^registry);
	static void initializePromotePassPass(PassRegistry ^registry);
	static void initializePruneEHPass(PassRegistry ^registry);
	static void initializeReassociatePass(PassRegistry ^registry);
	static void initializeRegToMemPass(PassRegistry ^registry);
	static void initializeRegionInfoPass(PassRegistry ^registry);
	static void initializeRegionOnlyPrinterPass(PassRegistry ^registry);
	static void initializeRegionOnlyViewerPass(PassRegistry ^registry);
	static void initializeRegionPrinterPass(PassRegistry ^registry);
	static void initializeRegionViewerPass(PassRegistry ^registry);
	static void initializeSCCPPass(PassRegistry ^registry);
	static void initializeSROAPass(PassRegistry ^registry);
	static void initializeSROA_DTPass(PassRegistry ^registry);
	static void initializeSROA_SSAUpPass(PassRegistry ^registry);
	static void initializeScalarEvolutionAliasAnalysisPass(PassRegistry ^registry);
	static void initializeScalarEvolutionPass(PassRegistry ^registry);
	static void initializeSimpleInlinerPass(PassRegistry ^registry);
	static void initializeRegisterCoalescerPass(PassRegistry ^registry);
	static void initializeSimplifyLibCallsPass(PassRegistry ^registry);
	static void initializeSingleLoopExtractorPass(PassRegistry ^registry);
	static void initializeSinkingPass(PassRegistry ^registry);
	static void initializeSlotIndexesPass(PassRegistry ^registry);
	static void initializeSpillPlacementPass(PassRegistry ^registry);
	static void initializeStackProtectorPass(PassRegistry ^registry);
	static void initializeStackColoringPass(PassRegistry ^registry);
	static void initializeStackSlotColoringPass(PassRegistry ^registry);
	static void initializeStripDeadDebugInfoPass(PassRegistry ^registry);
	static void initializeStripDeadPrototypesPassPass(PassRegistry ^registry);
	static void initializeStripDebugDeclarePass(PassRegistry ^registry);
	static void initializeStripNonDebugSymbolsPass(PassRegistry ^registry);
	static void initializeStripSymbolsPass(PassRegistry ^registry);
	static void initializeStrongPHIEliminationPass(PassRegistry ^registry);
	static void initializeTailCallElimPass(PassRegistry ^registry);
	static void initializeTailDuplicatePassPass(PassRegistry ^registry);
	static void initializeTargetPassConfigPass(PassRegistry ^registry);
	static void initializeDataLayoutPass(PassRegistry ^registry);
	static void initializeTargetTransformInfoAnalysisGroup(PassRegistry ^registry);
	static void initializeNoTTIPass(PassRegistry ^registry);
	static void initializeTargetLibraryInfoPass(PassRegistry ^registry);
	static void initializeTwoAddressInstructionPassPass(PassRegistry ^registry);
	static void initializeTypeBasedAliasAnalysisPass(PassRegistry ^registry);
	static void initializeUnifyFunctionExitNodesPass(PassRegistry ^registry);
	static void initializeUnreachableBlockElimPass(PassRegistry ^registry);
	static void initializeUnreachableMachineBlockElimPass(PassRegistry ^registry);
	static void initializeVerifierPass(PassRegistry ^registry);
	static void initializeVirtRegMapPass(PassRegistry ^registry);
	static void initializeVirtRegRewriterPass(PassRegistry ^registry);
	static void initializeInstSimplifierPass(PassRegistry ^registry);
	static void initializeUnpackMachineBundlesPass(PassRegistry ^registry);
	static void initializeFinalizeMachineBundlesPass(PassRegistry ^registry);
	static void initializeLoopVectorizePass(PassRegistry ^registry);
	static void initializeSLPVectorizerPass(PassRegistry ^registry);
	static void initializeBBVectorizePass(PassRegistry ^registry);
	static void initializeMachineFunctionPrinterPassPass(PassRegistry ^registry);
};

}
